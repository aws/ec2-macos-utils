// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/ec2-macos-utils/pkg/diskutil (interfaces: DiskUtility)

// Package mock_diskutil is a generated GoMock package.
package mock_diskutil

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDiskUtility is a mock of DiskUtility interface.
type MockDiskUtility struct {
	ctrl     *gomock.Controller
	recorder *MockDiskUtilityMockRecorder
}

// MockDiskUtilityMockRecorder is the mock recorder for MockDiskUtility.
type MockDiskUtilityMockRecorder struct {
	mock *MockDiskUtility
}

// NewMockDiskUtility creates a new mock instance.
func NewMockDiskUtility(ctrl *gomock.Controller) *MockDiskUtility {
	mock := &MockDiskUtility{ctrl: ctrl}
	mock.recorder = &MockDiskUtilityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiskUtility) EXPECT() *MockDiskUtilityMockRecorder {
	return m.recorder
}

// Info mocks base method.
func (m *MockDiskUtility) Info(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Info indicates an expected call of Info.
func (mr *MockDiskUtilityMockRecorder) Info(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockDiskUtility)(nil).Info), arg0)
}

// List mocks base method.
func (m *MockDiskUtility) List(arg0 []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockDiskUtilityMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockDiskUtility)(nil).List), arg0)
}

// RepairDisk mocks base method.
func (m *MockDiskUtility) RepairDisk(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RepairDisk", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RepairDisk indicates an expected call of RepairDisk.
func (mr *MockDiskUtilityMockRecorder) RepairDisk(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepairDisk", reflect.TypeOf((*MockDiskUtility)(nil).RepairDisk), arg0)
}

// ResizeContainer mocks base method.
func (m *MockDiskUtility) ResizeContainer(arg0, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResizeContainer", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResizeContainer indicates an expected call of ResizeContainer.
func (mr *MockDiskUtilityMockRecorder) ResizeContainer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResizeContainer", reflect.TypeOf((*MockDiskUtility)(nil).ResizeContainer), arg0, arg1)
}
