// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/ec2-macos-utils/internal/diskutil (interfaces: DiskUtil)

// Package mock_diskutil is a generated GoMock package.
package mock_diskutil

import (
	context "context"
	reflect "reflect"

	types "github.com/aws/ec2-macos-utils/internal/diskutil/types"
	gomock "github.com/golang/mock/gomock"
)

// MockDiskUtil is a mock of DiskUtil interface.
type MockDiskUtil struct {
	ctrl     *gomock.Controller
	recorder *MockDiskUtilMockRecorder
}

// MockDiskUtilMockRecorder is the mock recorder for MockDiskUtil.
type MockDiskUtilMockRecorder struct {
	mock *MockDiskUtil
}

// NewMockDiskUtil creates a new mock instance.
func NewMockDiskUtil(ctrl *gomock.Controller) *MockDiskUtil {
	mock := &MockDiskUtil{ctrl: ctrl}
	mock.recorder = &MockDiskUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiskUtil) EXPECT() *MockDiskUtilMockRecorder {
	return m.recorder
}

// Info mocks base method.
func (m *MockDiskUtil) Info(arg0 context.Context, arg1 string) (*types.DiskInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info", arg0, arg1)
	ret0, _ := ret[0].(*types.DiskInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Info indicates an expected call of Info.
func (mr *MockDiskUtilMockRecorder) Info(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockDiskUtil)(nil).Info), arg0, arg1)
}

// List mocks base method.
func (m *MockDiskUtil) List(arg0 context.Context, arg1 []string) (*types.SystemPartitions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*types.SystemPartitions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockDiskUtilMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockDiskUtil)(nil).List), arg0, arg1)
}

// RepairDisk mocks base method.
func (m *MockDiskUtil) RepairDisk(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RepairDisk", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RepairDisk indicates an expected call of RepairDisk.
func (mr *MockDiskUtilMockRecorder) RepairDisk(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RepairDisk", reflect.TypeOf((*MockDiskUtil)(nil).RepairDisk), arg0, arg1)
}

// ResizeContainer mocks base method.
func (m *MockDiskUtil) ResizeContainer(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResizeContainer", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResizeContainer indicates an expected call of ResizeContainer.
func (mr *MockDiskUtilMockRecorder) ResizeContainer(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResizeContainer", reflect.TypeOf((*MockDiskUtil)(nil).ResizeContainer), arg0, arg1, arg2)
}
